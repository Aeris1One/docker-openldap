name: Docker Build

on:
  schedule:
    - cron: "23 2 * * *"
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

env:
  NAME: "aeris1one/openldap"

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target_arch: [ amd64, i386, arm32v7, arm64v8 ]
        include:
          - target_arch: amd64
            qemu_arch: x86_64
          - target_arch: i386
            qemu_arch: i386
          - target_arch: arm32v7
            qemu_arch: arm
          - target_arch: arm64v8
            qemu_arch: aarch64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Install BATS for tests
        run: |
          curl -o bats.tar.gz -SL https://github.com/bats-core/bats-core/archive/v1.1.0.tar.gz
          mkdir bats-core && tar -xf bats.tar.gz -C bats-core --strip-components=1
          sudo bats-core/install.sh /usr/local

      - name: Prepare Dockerfile for cross-compilation
        run: |
          if [[ "${{ matrix.target_arch }}" != 'amd64' ]]; then
            sed -i "s/FROM debian/FROM ${{ matrix.target_arch }}\/debian/" image/Dockerfile;
            sed -i "/${{ matrix.target_arch }}\/debian/a COPY --from=multiarch/qemu-user-static:latest /usr/bin/qemu-${{ matrix.qemu_arch }}-static /usr/bin/" image/Dockerfile;
          fi
          cat image/Dockerfile

      - name: Set VERSION
        id: version
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            VERSION="stable"
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION="${{ github.ref }}" | sed -e 's/refs\/tags\/\(.*\)[-v]\(.*\)/\1\2/'
          else
            VERSION="${{ github.ref_name }}-dev"
          fi
          VERSION=$(echo "${VERSION}" | sed 's|/|-|g')
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          make build-nocache NAME=${{ env.NAME }} VERSION=${{ steps.version.outputs.VERSION }}-${{ matrix.target_arch }}

      - name: Run tests
        run: |
          make test NAME=${{ env.NAME }} VERSION=${{ steps.version.outputs.VERSION }}-${{ matrix.target_arch }}

      - name: Tag Docker image
        run: |
          make tag NAME=${{ env.NAME }} VERSION=${{ steps.version.outputs.VERSION }}-${{ matrix.target_arch }}

  build:
    needs: tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}

    - name: Set VERSION
      id: version
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          VERSION="stable"
        elif [ "${{ github.ref }}" == "refs/heads/dev" ]; then
          VERSION="dev"
        elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
          VERSION="${{ github.ref }}" | sed -e 's/refs\/tags\/\(.*\)[-v]\(.*\)/\1\2/'
        else
          VERSION="${{ github.ref_name }}-dev"
        fi
        VERSION=$(echo "${VERSION}" | sed 's|/|-|g')
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: ./image
        push: true
        sbom: true
        provenance: mode=max
        platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/386
        tags: ${{ env.NAME }}:${{ steps.version.outputs.VERSION }}
        labels: |
          org.opencontainers.image.title=Light Baseimage
          org.opencontainers.image.description=Lightweight base image for Docker
          org.opencontainers.image.url=https://github.com/aeris1one/container-baseimage